# name: "Terraform Validation"

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#   workflow_dispatch:
# jobs:
#   terraform:
#     name: "Terraform Run"
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - name: Change working directory 
#         run: |
#           cd ./terraform/
#           ls -al
          
#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v1
#         with:
#           terraform_version: 1.3.0
#           cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

#       - name: Terraform Format
#         id: fmt
#         run: |
#           cd ./terraform/
#           terraform fmt -check

#       - name: Terraform Init
#         id: init
#         run: |
#           cd ./terraform/
#           terraform init
      
#       - name: Terraform Validate
#         id: validate
#         run: |
#           cd ./terraform/
#           terraform validate -no-color

#       - uses: actions/github-script@v6
#         with:
#           github-token: ${{ secrets.GITHUB_TOKEN }}
#           script: |
#             const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
#             #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
#             #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
#             *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

#             github.rest.issues.createComment({
#               issue_number: context.issue.number,
#               owner: context.repo.owner,
#               repo: context.repo.repo,
#               body: output
#             })



